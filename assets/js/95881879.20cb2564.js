"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7168],{5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>E});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),s=n(6550),i=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[i,u]=h({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=i??d;return p({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,l]),tabValues:l}}var f=n(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==s&&(d(t),i(a))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:m},o,{className:(0,l.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=g(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",v.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function E(e){const t=(0,f.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},7235:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);function r(){return a.createElement("div",{style:{height:"1px"}})}},1853:(e,t,n)=>{function a(e){window.scrollY>0?e.style.boxShadow="0 1px 2px 0 rgb(0 0 0 / 10%)":e.style.boxShadow="unset"}function r(){setTimeout((()=>{window.removeEventListener("scroll",window.toggleNavOnScroll);const e=document.getElementsByClassName("navbar--fixed-top");if(e[0]){const t=e[0];a(t),window.toggleNavOnScroll=a.bind(this,t),window.addEventListener("scroll",window.toggleNavOnScroll)}}),2)}function l(){setTimeout((()=>{const e=document.querySelectorAll(".homepage > body > #__docusaurus > nav")?.[0];try{e.classList.add("fade-in")}catch(t){console.error(t),console.log("element was not rendered in time - use MutationObserver")}}),2)}n.r(t),n.d(t,{fadeIn:()=>l,readdAutoNavShadowToggle:()=>r})},8751:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var a=n(7294);function r(e){return e?.children[0]?.children[0]}function l(e){let{children:t,minHeight:n,innerDisplay:r}=e;return a.createElement("div",{className:"documentation-example-container",style:{minHeight:`${n||400}px`}},a.createElement("div",{style:{display:r||"block"}},t))}},8004:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(8751),r=n(6619),l=n(7294);function o(e){return l.createElement("div",null,"Method results:",l.createElement(r.Z,{data:e.resultText}))}function s(e){let{children:t,propertyName:n,displayResults:r,argument:s,withEvent:i}=e;const u=l.useRef(null),[c,d]=l.useState([""]);return l.createElement("div",null,l.createElement("div",{ref:u},l.createElement(a.Z,null,t)),l.createElement("div",{className:"documentation-example-container method-example-container",style:{paddingBottom:i?0:""}},l.createElement("button",{className:"documentation-button",onClick:()=>function(e,t,n,r,l,o){const s=(0,a.a)(e)[r](o);if(l??1){let e=[...t];1===e.length&&""===e[0]&&(e=[]),e.length>3&&e.pop(),e.unshift(JSON.parse(JSON.stringify(s))),n(e)}}(u.current.children[0],c,d,n,r,s)},"Call Method"),(r??!0)&&l.createElement(o,{resultText:c})))}},6619:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);function r(e){return e.data.map(((e,t)=>{const n=""===e?"":JSON.stringify(e);return a.createElement("div",{key:t},">"," ",n)}))}},9433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>v,default:()=>x,frontMatter:()=>f,metadata:()=>b,toc:()=>y});var a=n(7462),r=n(7294),l=n(3905),o=n(8004),s=n(8751),i=n(6619);const u=r.forwardRef(((e,t)=>{let{propertyName:n}=e;const[a,l]=r.useState(["onComponentRender"===n?"Finished rendering":""]);return r.useImperativeHandle(t,(()=>{const e=[];return{updateText:a=>{if("onClearMessages"===n)e.length>3&&e.pop(),e.unshift("Messages cleared"),l([...e]);else{if(!t.current||void 0===a)return;e.length>3&&e.pop(),e.unshift(JSON.parse(JSON.stringify(a))),l([...e])}}}})),r.createElement("div",null,"Latest events:",r.createElement(i.Z,{data:a}))}));function c(e){let{children:t,propertyName:n,withMethod:a}=e;const l=r.useRef(null),o=r.useRef(null);return r.useEffect((()=>{setTimeout((()=>{if(l.current){const e=l.current;if(l.current&&o.current){const e=a?l.current.children[0].children[0].children[0]:l.current.children[0];(0,s.a)(e)[n]=o.current?.updateText}else{(0,s.a)(e.children[0])[n]=()=>{}}}}),200)}),[]),r.createElement("div",null,a?r.createElement("div",{ref:l},t):r.createElement("div",{ref:l},r.createElement(s.Z,null,t)),r.createElement("div",{className:"documentation-example-container method-example-container"},r.createElement(u,{propertyName:n,ref:o})))}var d=n(4602),m=n(7235),p=n(1262),h=n(5162),g=n(4866);const f={sidebar_position:11},v="Events",b={unversionedId:"docs/events",id:"docs/events",title:"Events",description:"Events can be observed in two ways, either by assigning a function to a property or by listening to custom events fired from the component element.",source:"@site/docs/docs/events.mdx",sourceDirName:"docs",slug:"/docs/events",permalink:"/docs/events",draft:!1,editUrl:"https://github.com/OvidijusParsiunas/deep-chat/tree/main/website/docs/docs/events.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"docs",previous:{title:"Methods",permalink:"/docs/methods"},next:{title:"Interceptors",permalink:"/docs/interceptors"}},k={},y=[{value:"<code>onNewMessage</code>",id:"onNewMessage",level:3},{value:"Example",id:"example",level:4},{value:"<code>onClearMessages</code>",id:"onClearMessages",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>onComponentRender</code>",id:"onComponentRender",level:3},{value:"Example",id:"example-2",level:4}],E={toc:y},N="wrapper";function x(e){let{components:t,...r}=e;return(0,l.kt)(N,(0,a.Z)({},E,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"events"},"Events"),(0,l.kt)("p",null,"Events can be observed in two ways, either by assigning a function to a property or by listening to custom events fired from the component element."),(0,l.kt)("h3",{id:"onNewMessage"},(0,l.kt)("inlineCode",{parentName:"h3"},"onNewMessage")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Function: (",(0,l.kt)("inlineCode",{parentName:"li"},"newMessage: Body"),") => ",(0,l.kt)("inlineCode",{parentName:"li"},"void")),(0,l.kt)("li",{parentName:"ul"},"Event: ",(0,l.kt)("inlineCode",{parentName:"li"},"new-message")),(0,l.kt)("li",{parentName:"ul"},"Body: {",(0,l.kt)("a",{parentName:"li",href:"./messages#MessageContent"},(0,l.kt)("inlineCode",{parentName:"a"},"message: MessageContent")),", ",(0,l.kt)("inlineCode",{parentName:"li"},"isInitial: boolean"),"}")),(0,l.kt)("p",null,"Triggered when a message is sent from the user and recieved from the target service. ",(0,l.kt)("br",null),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"message")," encompasses all of the message contents. ",(0,l.kt)("br",null),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"isInitial")," is used to determine whether if the message is from the prepopulated ",(0,l.kt)("a",{parentName:"p",href:"./messages#initialMessages"},(0,l.kt)("inlineCode",{parentName:"a"},"initialMessages"))," property."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)(p.Z,{mdxType:"BrowserOnly"},(()=>n(1853).readdAutoNavShadowToggle())),(0,l.kt)(c,{propertyName:"onNewMessage",mdxType:"ComponentContainerEvents"},(0,l.kt)(d.Z,{containerStyle:{borderRadius:"8px"},directConnection:{demo:!0},mdxType:"DeepChatBrowser"})),(0,l.kt)(g.Z,{mdxType:"Tabs"},(0,l.kt)(h.Z,{value:"js",label:"Function",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"chatElementRef.onNewMessage = (message) => { console.log(message); };\n"))),(0,l.kt)(h.Z,{value:"py",label:"Event",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\nchatElementRef.addEventListener('new-message', (message) => { console.log(message.detail); });\n")))),(0,l.kt)(m.Z,{mdxType:"LineBreak"}),(0,l.kt)("h3",{id:"onClearMessages"},(0,l.kt)("inlineCode",{parentName:"h3"},"onClearMessages")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Function: () => ",(0,l.kt)("inlineCode",{parentName:"li"},"void")),(0,l.kt)("li",{parentName:"ul"},"Event: ",(0,l.kt)("inlineCode",{parentName:"li"},"clear-messages"))),(0,l.kt)("p",null,"Triggered when the ",(0,l.kt)("a",{parentName:"p",href:"./methods#clearMessages"},(0,l.kt)("inlineCode",{parentName:"a"},"clearMessages"))," method has been executed. The core purpose of this is to help track messages state."),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)(c,{propertyName:"onClearMessages",withMethod:!0,mdxType:"ComponentContainerEvents"},(0,l.kt)(o.Z,{propertyName:"clearMessages",displayResults:!1,withEvent:!0,mdxType:"ComponentContainerMethods"},(0,l.kt)(d.Z,{containerStyle:{borderRadius:"8px"},directConnection:{demo:!0},initialMessages:[{text:"What is 2 + 2?",role:"user"},{text:"The result of 2 + 2 is 4.",role:"ai"},{text:"Wrong, it is 5.",role:"user"},{text:"You are correct, the result of 2 + 2 is 5.",role:"ai"}],mdxType:"DeepChatBrowser"}))),(0,l.kt)(g.Z,{mdxType:"Tabs"},(0,l.kt)(h.Z,{value:"js",label:"Function",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'chatElementRef.onClearMessages = () => { console.log("Messages cleared"); };\n'))),(0,l.kt)(h.Z,{value:"py",label:"Event",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\nchatElementRef.addEventListener('messages-cleared', () => { console.log(\"Messages cleared\"); });\n")))),(0,l.kt)(m.Z,{mdxType:"LineBreak"}),(0,l.kt)("h3",{id:"onComponentRender"},(0,l.kt)("inlineCode",{parentName:"h3"},"onComponentRender")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Function: () => ",(0,l.kt)("inlineCode",{parentName:"li"},"void")),(0,l.kt)("li",{parentName:"ul"},"Event: ",(0,l.kt)("inlineCode",{parentName:"li"},"render"))),(0,l.kt)("p",null,"Triggered when the component has finished rendering on the browser's window."),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)(c,{propertyName:"onComponentRender",mdxType:"ComponentContainerEvents"},(0,l.kt)(d.Z,{containerStyle:{borderRadius:"8px"},directConnection:{demo:!0},mdxType:"DeepChatBrowser"})),(0,l.kt)(g.Z,{mdxType:"Tabs"},(0,l.kt)(h.Z,{value:"js",label:"Function",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'chatElementRef.onComponentRender = () => { console.log("Finished rendering"); };\n'))),(0,l.kt)(h.Z,{value:"py",label:"Event",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\nchatElementRef.addEventListener('render', () => { console.log(\"Finished rendering\"); });\n")))),(0,l.kt)(m.Z,{mdxType:"LineBreak"}))}x.isMDXComponent=!0}}]);