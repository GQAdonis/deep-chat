"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7437],{5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),o=a(6010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>x});var n=a(7462),o=a(7294),r=a(6010),i=a(2466),l=a(6550),s=a(1980),p=a(7392),d=a(12);function m(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:o}}=e;return{value:t,label:a,attributes:n,default:o}}))}function u(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function k(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=u(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[s,p]=h({queryString:a,groupId:n}),[m,k]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,d.Nk)(a);return[n,(0,o.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),f=(()=>{const e=s??m;return c({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!c({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),k(e)}),[p,k,r]),tabValues:r}}var f=a(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),u=e=>{const t=e.currentTarget,a=d.indexOf(t),n=p[a].value;n!==l&&(m(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:c,onClick:u},i,{className:(0,r.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":l===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function N(e){const t=k(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},o.createElement(g,(0,n.Z)({},e,t)),o.createElement(y,(0,n.Z)({},e,t)))}function x(e){const t=(0,f.Z)();return o.createElement(N,(0,n.Z)({key:String(t)},e))}},7235:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294);function o(){return n.createElement("div",{style:{height:"1px"}})}},1853:(e,t,a)=>{function n(e){window.scrollY>0?e.style.boxShadow="0 1px 2px 0 rgb(0 0 0 / 10%)":e.style.boxShadow="unset"}function o(){setTimeout((()=>{window.removeEventListener("scroll",window.toggleNavOnScroll);const e=document.getElementsByClassName("navbar--fixed-top");if(e[0]){const t=e[0];n(t),window.toggleNavOnScroll=n.bind(this,t),window.addEventListener("scroll",window.toggleNavOnScroll)}}),2)}function r(){setTimeout((()=>{const e=document.querySelectorAll(".homepage > body > #__docusaurus > nav")?.[0];try{e.classList.add("fade-in")}catch(t){console.error(t),console.log("element was not rendered in time - use MutationObserver")}}),2)}a.r(t),a.d(t,{fadeIn:()=>r,readdAutoNavShadowToggle:()=>o})},8751:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>o});var n=a(7294);function o(e){return e?.children[0]?.children[0]}function r(e){let{children:t,minHeight:a,innerDisplay:o}=e;return n.createElement("div",{className:"documentation-example-container",style:{minHeight:`${a||400}px`}},n.createElement("div",{style:{display:o||"block"}},t))}},5034:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>g,frontMatter:()=>m,metadata:()=>c,toc:()=>k});var n=a(7462),o=(a(7294),a(3905)),r=a(8751),i=a(4602),l=a(7235),s=a(1262),p=a(5162),d=a(4866);const m={sidebar_position:8},u="Files",c={unversionedId:"docs/files",id:"docs/files",title:"Files",description:"Properties used for sending files.",source:"@site/docs/docs/files.mdx",sourceDirName:"docs",slug:"/docs/files",permalink:"/docs/files",draft:!1,editUrl:"https://github.com/OvidijusParsiunas/deep-chat/tree/main/website/docs/docs/files.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docs",previous:{title:"Speech",permalink:"/docs/speech"},next:{title:"Intro Panel",permalink:"/docs/introPanel"}},h={},k=[{value:"<code>images</code>",id:"images",level:3},{value:"<code>gifs</code>",id:"gifs",level:3},{value:"<code>camera</code>",id:"camera",level:3},{value:"<code>audio</code>",id:"audio",level:3},{value:"<code>microphone</code>",id:"microphone",level:3},{value:"<code>mixedFiles</code>",id:"mixedFiles",level:3},{value:"<code>dragAndDrop</code>",id:"dragAndDrop",level:3},{value:"Example",id:"example",level:4},{value:"Types",id:"types",level:2},{value:"<code>FilesServiceConfig</code>",id:"FilesServiceConfig",level:3},{value:"<code>FileAttachments</code>",id:"FileAttachments",level:3},{value:"<code>InfoModal</code>",id:"InfoModal",level:3},{value:"<code>CameraFilesServiceConfig</code>",id:"CameraFilesServiceConfig",level:3},{value:"<code>CameraFiles</code>",id:"CameraFiles",level:3},{value:"<code>MicrophoneFilesServiceConfig</code>",id:"MicrophoneFilesServiceConfig",level:3},{value:"<code>AudioRecordingFiles</code>",id:"AudioRecordingFiles",level:3},{value:"<code>AudioFormat</code>",id:"AudioFormat",level:3}],f={toc:k},b="wrapper";function g(e){let{components:t,...m}=e;return(0,o.kt)(b,(0,n.Z)({},f,m,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"files"},"Files"),(0,o.kt)("p",null,"Properties used for sending files."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"When any of these properties are used, ",(0,o.kt)("a",{parentName:"p",href:"#dragAndDrop"},(0,o.kt)("inlineCode",{parentName:"a"},"dragAndDrop"))," is enabled automatically.")),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)(s.Z,{mdxType:"BrowserOnly"},(()=>a(1853).readdAutoNavShadowToggle())),(0,o.kt)("h3",{id:"images"},(0,o.kt)("inlineCode",{parentName:"h3"},"images")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to upload images. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the image button or drop a file to attach it to the next outgoing message.",initialMessages:[{file:{src:"/img/city.jpeg",type:"image"},role:"user"}],directConnection:{demo:!0},images:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat images="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  images="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the image button or drop a file to attach it to the next outgoing message."\n  initialMessages=\'[{"file": {"src": "path-to-file.jpeg", "type": "image"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"gifs"},(0,o.kt)("inlineCode",{parentName:"h3"},"gifs")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to upload GIFs. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the GIF button or drop a file to attach it to the next outgoing message.",initialMessages:[{file:{src:"/img/example-gif.gif",type:"image"},role:"user"}],directConnection:{demo:!0},gifs:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat gifs="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  gifs="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the GIF button or drop a file to attach it to the next outgoing message."\n  initialMessages=\'[{"file": {"src": "path-to-file.gif", "type": "image"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"camera"},(0,o.kt)("inlineCode",{parentName:"h3"},"camera")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#CameraFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"CameraFilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to capture images using a web camera. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#CameraFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"CameraFilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the camera button to open up a modal for capturing photos.",initialMessages:[{file:{src:"/img/cat.jpg",type:"image"},role:"user"}],directConnection:{demo:!0},camera:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat camera="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  camera="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the camera button to open up a modal for capturing photos."\n  initialMessages=\'[{"file": {"src": "path-to-file.jpeg", "type": "image"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"audio"},(0,o.kt)("inlineCode",{parentName:"h3"},"audio")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to upload audio files. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the audio button or drop a file to attach it to the next outgoing message.",initialMessages:[{file:{src:"/audio/cantinaBand.wav",type:"audio"},role:"user"}],directConnection:{demo:!0},audio:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat audio="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  audio="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the audio button or drop a file to attach it to the next outgoing message."\n  initialMessages=\'[{"file": {"src": "path-to-file.wav", "type": "audio"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"microphone"},(0,o.kt)("inlineCode",{parentName:"h3"},"microphone")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#MicrophoneFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"MicrophoneFilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to record audio files using the microphone. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#MicrophoneFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"MicrophoneFilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the microphone button or drop a file to attach it to the next outgoing message.",initialMessages:[{file:{src:"/audio/jeff.mp3",type:"audio"},role:"user"}],directConnection:{demo:!0},microphone:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat microphone="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  microphone="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the microphone button or drop a file to attach it to the next outgoing message."\n  initialMessages=\'[{"file": {"src": "path-to-file.wav", "type": "audio"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"mixedFiles"},(0,o.kt)("inlineCode",{parentName:"h3"},"mixedFiles")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | ",(0,o.kt)("a",{parentName:"li",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig")))),(0,o.kt)("p",null,"Creates a button that allows the user to upload any kind of files. ",(0,o.kt)("br",null),"\nThis property can be set with a boolean ",(0,o.kt)("em",{parentName:"p"},"true")," or configured with a ",(0,o.kt)("a",{parentName:"p",href:"#FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"a"},"FilesServiceConfig"))," object."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the file button or drop a file to attach it to the next outgoing message.",initialMessages:[{file:{src:"/text/text.txt",name:"text-file.txt",type:"file"},role:"user"}],directConnection:{demo:!0},mixedFiles:!0,mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat mixedFiles="true"></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  mixedFiles="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the file button or drop a file to attach it to the next outgoing message."\n  initialMessages=\'[{"file": {"src": "path-to-file.txt", "name": "text-file.txt", "type": "file"}, "role": "user"}]\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"dragAndDrop"},(0,o.kt)("inlineCode",{parentName:"h3"},"dragAndDrop")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"boolean")," | ",(0,o.kt)("a",{parentName:"li",href:"./styles#CustomStyle"},(0,o.kt)("inlineCode",{parentName:"a"},"CustomStyle"))),(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("em",{parentName:"li"},"false"))),(0,o.kt)("p",null,"Configuration for the drag and drop functionality. If any of the above properties are defined or you have defined a service in the ",(0,o.kt)("a",{parentName:"p",href:"./directConnection"},(0,o.kt)("inlineCode",{parentName:"a"},"directConnection"))," property which allows file uploads -\nthis will automatically be defaulted to ",(0,o.kt)("em",{parentName:"p"},"true"),". Once the user drops a file, it will only be accepted if any of the above properties allow it via their default or custom ",(0,o.kt)("a",{parentName:"p",href:"#FileAttachments"},(0,o.kt)("inlineCode",{parentName:"a"},"acceptedFormats"))," property's value. For example if\n",(0,o.kt)("em",{parentName:"p"},'".png,.jpg"')," in ",(0,o.kt)("a",{parentName:"p",href:"./files#images"},(0,o.kt)("inlineCode",{parentName:"a"},"images"))," are the only file types allowed, a dropped ",(0,o.kt)("em",{parentName:"p"},".txt")," file will not be accepted."),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Drag and drop a file to observe the result.",dragAndDrop:{backgroundColor:"#80ff704d",border:"5px dashed #52c360"},mixedFiles:!0,directConnection:{demo:!0},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat dragAndDrop=\'{"backgroundColor": "#80ff704d", "border": "5px dashed #52c360"}\'></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  dragAndDrop=\'{"backgroundColor": "#80ff704d", "border": "5px dashed #52c360"}\'\n  mixedFiles="true"\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Drag and drop a file to observe the result."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h2",{id:"types"},"Types"),(0,o.kt)("p",null,"Types shared by files properties:"),(0,o.kt)("h3",{id:"FilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"h3"},"FilesServiceConfig")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: {",(0,o.kt)("a",{parentName:"li",href:"./connect#Request"},(0,o.kt)("inlineCode",{parentName:"a"},"request?: Request")),", ",(0,o.kt)("a",{parentName:"li",href:"#FileAttachments"},(0,o.kt)("inlineCode",{parentName:"a"},"files?: FileAttachments")),", ",(0,o.kt)("a",{parentName:"li",href:"./styles#Button"},(0,o.kt)("inlineCode",{parentName:"a"},"button?: Button")),"}")),(0,o.kt)("p",null,"Object used to configure the ability for the component to send files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"request")," object is used to override the default service request settings when sending a file. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"files")," controls what files can be uploaded to the component. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"button")," is used to customize the the button element that enables the files to be uploaded. ",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the audio button or drop a file to attach it to the next outgoing message.",directConnection:{demo:!0},audio:{request:{url:"https://customapi.com/audio"},files:{acceptedFormats:".mp3,.wav"},button:{position:"outside-left"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  audio=\'{\n    "request": {"url": "https://customapi.com/audio"},\n    "files": {"acceptedFormats": ".mp3,.wav"},\n    "button": {"position": "outside-left"}\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  audio=\'{\n    "request": {"url": "https://customapi.com/audio"},\n    "files": {"acceptedFormats": ".mp3,.wav"},\n    "button": {"position": "outside-left"}\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the audio button or drop a file to attach it to the next outgoing message."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"FileAttachments"},(0,o.kt)("inlineCode",{parentName:"h3"},"FileAttachments")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Type: {",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles?: number"),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats?: string"),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"p",href:"#InfoModal"},(0,o.kt)("inlineCode",{parentName:"a"},"infoModal?: InfoModal"))," ",(0,o.kt)("br",null),"\n}")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Default: ",(0,o.kt)("em",{parentName:"p"},"{",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," acceptedFormats: ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",' for images: ".png,.jpg", ',(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",' for audio: ".4a,.mp3,.webm,.mp4,.mpga,.wav,.mpeg,.m4a", ',(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0",' for gifs: ".gif" ',(0,o.kt)("br",null),"\n}")))),(0,o.kt)("p",null,"Used to configure what files the component can accept. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles")," controls the maximum number of files that can be sent within one message. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats")," is used to define the accepted file formats. This is a string that uses the same syntax\nas the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"},"accept")," attributes\nin ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"},"input elements"),". The ",(0,o.kt)("a",{parentName:"p",href:"#dragAndDrop"},(0,o.kt)("inlineCode",{parentName:"a"},"dragAndDrop"))," feature will also\nuse this value to verify the dropped files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"infoModal")," is used to display noteworthy information when the user clicks the button to browse for a file. ",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the image button or drop a file to attach it to the next outgoing message.",directConnection:{demo:!0},images:{files:{maxNumberOfFiles:2,acceptedFormats:".jpg,.png"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat images=\'{"files": {"maxNumberOfFiles": 2, "acceptedFormats": ".jpg,.png"}}\'></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  images=\'{"files": {"maxNumberOfFiles": 2, "acceptedFormats": ".jpg,.png"}}\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the image button or drop a file to attach it to the next outgoing message."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"InfoModal"},(0,o.kt)("inlineCode",{parentName:"h3"},"InfoModal")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: {",(0,o.kt)("inlineCode",{parentName:"li"},"textMarkDown: string"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"openModalOnce?: boolean"),", ",(0,o.kt)("a",{parentName:"li",href:"./styles#CustomStyle"},(0,o.kt)("inlineCode",{parentName:"a"},"containerStyle?: CustomStyle")),"}"),(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("em",{parentName:"li"},"{openModalOnce: false}"))),(0,o.kt)("p",null,"A modal that is triggered when a user clicks on a button to upload a file. It is useful for scenarios when a user needs some\nclarification of how their data will be handled or other noteworty information. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"textMarkDown")," is a string that uses ",(0,o.kt)("a",{parentName:"p",href:"https://www.markdownguide.org/basic-syntax/"},"Markdown")," syntax to generate the modal content.\nUse this ",(0,o.kt)("a",{parentName:"p",href:"https://jonschlinkert.github.io/remarkable/demo/"},"Playground")," to help customize your content. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"openModalOnce")," controls whether the modal is opened when the user clicks a button once or every time. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"containerStyle")," is used to augment the basic styling of the modal element."),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Click the image button to open up the modal.",directConnection:{demo:!0},images:{files:{infoModal:{textMarkDown:"Please note our terms of service for sending files: [link](https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley).",openModalOnce:!0,containerStyle:{borderRadius:"5px"}}}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  images=\'{\n    "files": {\n      "infoModal": {\n        "textMarkDown":\n          "Please note our terms of service for sending files: [link](https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley).",\n        "openModalOnce": true,\n        "containerStyle": {"borderRadius": "5px"}\n      }\n    }\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  images=\'{\n    "files": {\n      "infoModal": {\n        "textMarkDown":\n          "Please note our terms of service for sending files: [link](https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley).",\n        "openModalOnce": true,\n        "containerStyle": {"borderRadius": "5px"}\n      }\n    }\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Click the image button to open up the modal."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"CameraFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"h3"},"CameraFilesServiceConfig")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: {",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"./connect#Request"},(0,o.kt)("inlineCode",{parentName:"a"},"request?: Request")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"#CameraFiles"},(0,o.kt)("inlineCode",{parentName:"a"},"files?: CameraFiles")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"./styles#Button"},(0,o.kt)("inlineCode",{parentName:"a"},"button?: Button")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"./styles#CustomStyle"},(0,o.kt)("inlineCode",{parentName:"a"},"modalContainerStyle?: CustomStyle"))," ",(0,o.kt)("br",null),"\n}")),(0,o.kt)("p",null,"Configuration for capturing images using a web camera and handling the resultant files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"request")," is used to override the default request settings when sending image files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"files")," is used to configure the files that are captured by the camera. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"button")," is used to customize the button element used for the camera. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"modalContainerStyle")," is used to customize the modal used to display the camera. ",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the camera button to open up a modal for capturing photos.",directConnection:{demo:!0},camera:{request:{url:"https://customapi.com/image-from-camera"},files:{format:"png"},button:{position:"outside-left"},modalContainerStyle:{borderRadius:"5px"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  camera=\'{\n    "request": {"url": "https://customapi.com/image-from-camera"},\n    "files": {"format": "png"},\n    "button": {"position": "outside-left"},\n    "modalContainerStyle": {"borderRadius": "5px"}\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  camera=\'{\n    "request": {"url": "https://customapi.com/image-from-camera"},\n    "files": {"format": "png"},\n    "button": {"position": "outside-left"},\n    "modalContainerStyle": {"borderRadius": "5px"}\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the camera button to open up a modal for capturing photos."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"CameraFiles"},(0,o.kt)("inlineCode",{parentName:"h3"},"CameraFiles")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Type: {",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"format?:")," ",(0,o.kt)("inlineCode",{parentName:"p"},'"png"')," | ",(0,o.kt)("inlineCode",{parentName:"p"},'"jpeg"'),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"dimensions?:")," {",(0,o.kt)("inlineCode",{parentName:"p"},"width?: number"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"height?: number"),"} ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles?: number"),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats?: string")," ",(0,o.kt)("br",null),"\n}")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Default: ",(0,o.kt)("em",{parentName:"p"},"{",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",' format: "png", ',(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",' acceptedFormats: "image/',"*",'" ',(0,o.kt)("br",null),"\n}")))),(0,o.kt)("p",null,"Configuration for the captured files by the camera. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"format")," is the resultant format of the image file that is produced by capturing a photograph. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"dimensions")," are used to set the pixel area of the photograph. Please note that this is largely controlled by the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia"},(0,o.kt)("inlineCode",{parentName:"a"},"mediaDevice")),"\nof the user's browser, so if the dimensions you have provided skew the photograph in a particular way they may be overriden.",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles")," is the limit to the number of images that can be captured for one message. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats")," is used to limit the allowed files that can be dropped via the ",(0,o.kt)("a",{parentName:"p",href:"#dragAndDrop"},(0,o.kt)("inlineCode",{parentName:"a"},"dragAndDrop"))," functionality as this feature will enable it automatically.\nIt uses the same syntax as the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"},"accept")," attributes\nin ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"},"input elements"),". If the configuration in ",(0,o.kt)("a",{parentName:"p",href:"#images"},(0,o.kt)("inlineCode",{parentName:"a"},"images"))," also uses\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats")," property, it will override this one.",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the camera button to open up a modal for capturing photos.",directConnection:{demo:!0},camera:{files:{format:"png",dimensions:{width:450,height:600},maxNumberOfFiles:2,acceptedFormats:".jpg,.png"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  camera=\'{\n    "files": {\n      "format": "png",\n      "dimensions": {"width": 450, "height": 600},\n      "maxNumberOfFiles": 2,\n      "acceptedFormats": ".jpg,.png"\n    }\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  camera=\'{\n    "files": {\n      "format": "png",\n      "dimensions": {"width": 450, "height": 600},\n      "maxNumberOfFiles": 2,\n      "acceptedFormats": ".jpg,.png"\n    }\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the camera button to open up a modal for capturing photos."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"MicrophoneFilesServiceConfig"},(0,o.kt)("inlineCode",{parentName:"h3"},"MicrophoneFilesServiceConfig")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: {",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"./connect#Request"},(0,o.kt)("inlineCode",{parentName:"a"},"request?: Request")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"#AudioRecordingFiles"},(0,o.kt)("inlineCode",{parentName:"a"},"files?: AudioRecordingFiles")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"li",href:"./styles#MicrophoneStyles"},(0,o.kt)("inlineCode",{parentName:"a"},"button?: MicrophoneStyles"))," ",(0,o.kt)("br",null),"\n}")),(0,o.kt)("p",null,"Configuration for recording audio using a microphone and handling the resultant files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"request")," is used to override the default request settings when sending audio files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"files")," is used to configure the resultant files that are recorded by the microphone. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"button")," is the styling used for the microphone button element. ",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the microphone button to record audio.",directConnection:{demo:!0},microphone:{request:{url:"https://customapi.com/audio-from-microphone"},files:{format:"mp3"},button:{position:"outside-left"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  microphone=\'{\n    "request": {"url": "https://customapi.com/audio-from-microphone"},\n    "files": {"format": "mp3"},\n    "button": {"position": "outside-left"}\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  microphone=\'{\n    "request": {"url": "https://customapi.com/audio-from-microphone"},\n    "files": {"format": "mp3"},\n    "button": {"position": "outside-left"}\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the microphone button to record audio."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"AudioRecordingFiles"},(0,o.kt)("inlineCode",{parentName:"h3"},"AudioRecordingFiles")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Type: {",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"p",href:"#AudioFormat"},(0,o.kt)("inlineCode",{parentName:"a"},"format?: AudioFormat")),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"maxDurationSeconds?: number"),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles?: number"),", ",(0,o.kt)("br",null),"\n","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats?: string")," ",(0,o.kt)("br",null),"\n}")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Default: ",(0,o.kt)("em",{parentName:"p"},"{",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",' format: "mp3", ',(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," maxDurationSeconds: 5999, ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0",' acceptedFormats: "audio/',"*",'" ',(0,o.kt)("br",null),"\n}")))),(0,o.kt)("p",null,"Configuration for the recorded microphone files. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"format")," is the resultant audio file format. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"maxDurationSeconds")," is the maximum length of time one audio file can be recorded.",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"maxNumberOfFiles")," is the limit to the number of files that can be recorded for one message. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats")," is used to limit the allowed files that can be dropped via the ",(0,o.kt)("a",{parentName:"p",href:"#dragAndDrop"},(0,o.kt)("inlineCode",{parentName:"a"},"dragAndDrop"))," functionality as this feature will enable it automatically.\nIt uses the same syntax as the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept"},"accept")," attributes\nin ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"},"input elements"),". If the configuration in ",(0,o.kt)("a",{parentName:"p",href:"#audio"},(0,o.kt)("inlineCode",{parentName:"a"},"audio"))," also uses\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptedFormats")," property, it will override this one.",(0,o.kt)("br",null)),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(i.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Use the microphone button to record audio.",directConnection:{demo:!0},microphone:{files:{format:"mp3",maxDurationSeconds:10,maxNumberOfFiles:2,acceptedFormats:".mp3,.wav"}},mdxType:"DeepChatBrowser"})),(0,o.kt)(d.Z,{mdxType:"Tabs"},(0,o.kt)(p.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  microphone=\'{\n    "files": {\n      "format": "mp3",\n      "maxDurationSeconds": 10,\n      "maxNumberOfFiles": 2,\n      "acceptedFormats": ".mp3,.wav"\n    }\n  }\'\n></deep-chat>\n'))),(0,o.kt)(p.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  microphone=\'{\n    "files": {\n      "format": "mp3",\n      "maxDurationSeconds": 10,\n      "maxNumberOfFiles": 2,\n      "acceptedFormats": ".mp3,.wav"\n    }\n  }\'\n  directConnection=\'{"demo": true}\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n  introMessage="Use the microphone button to record audio."\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The use of this object will automatically disable the ",(0,o.kt)("a",{parentName:"p",href:"./speech#speechToText"},(0,o.kt)("inlineCode",{parentName:"a"},"speechToText"))," functionality.")),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h3",{id:"AudioFormat"},(0,o.kt)("inlineCode",{parentName:"h3"},"AudioFormat")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},'"mp3"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"4a"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"webm"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"mp4"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"mpga"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"wav"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"mpeg"')," | ",(0,o.kt)("inlineCode",{parentName:"li"},'"m4a"'))),(0,o.kt)("p",null,"Allowed audio file formats."),(0,o.kt)(l.Z,{mdxType:"LineBreak"}))}g.isMDXComponent=!0}}]);