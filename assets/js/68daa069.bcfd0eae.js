"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4233],{5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(6010);const r={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),o=n(7294),r=n(6010),s=n(2466),l=n(6550),i=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[s,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[i,u]=h({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=i??d;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var k=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(d(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},s,{className:(0,r.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=b(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",f.tabList)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(g,(0,a.Z)({},e,t)))}function w(e){const t=(0,k.Z)();return o.createElement(v,(0,a.Z)({key:String(t)},e))}},7235:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);function o(){return a.createElement("div",{style:{height:"1px"}})}},1853:(e,t,n)=>{function a(e){window.scrollY>0?e.style.boxShadow="0 1px 2px 0 rgb(0 0 0 / 10%)":e.style.boxShadow="unset"}function o(){setTimeout((()=>{window.removeEventListener("scroll",window.toggleNavOnScroll);const e=document.getElementsByClassName("navbar--fixed-top");if(e[0]){const t=e[0];a(t),window.toggleNavOnScroll=a.bind(this,t),window.addEventListener("scroll",window.toggleNavOnScroll)}}),2)}function r(){setTimeout((()=>{const e=document.querySelectorAll(".homepage > body > #__docusaurus > nav")?.[0];try{e.classList.add("fade-in")}catch(t){console.error(t),console.log("element was not rendered in time - use MutationObserver")}}),2)}n.r(t),n.d(t,{fadeIn:()=>r,readdAutoNavShadowToggle:()=>o})},8751:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>o});var a=n(7294);function o(e){return e?.children[0]?.children[0]}function r(e){let{children:t,minHeight:n,innerDisplay:o}=e;return a.createElement("div",{className:"documentation-example-container",style:{minHeight:`${n||400}px`}},a.createElement("div",{style:{display:o||"block"}},t))}},5833:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);function o(e){let{children:t}=e;const[n,o]=a.useState(!0);return a.createElement("div",null,n&&t[0],!n&&t[1],a.createElement("div",{className:"component-key-toggle-button-container"},a.createElement("button",{className:"documentation-button component-key-toggle-button",onClick:()=>o(!n)},n&&"Insert test key",!n&&"Use placeholder key")))}},1659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>p,default:()=>y,frontMatter:()=>d,metadata:()=>m,toc:()=>b});var a=n(7462),o=(n(7294),n(3905)),r=(n(5833),n(8751)),s=n(4602),l=n(7235),i=n(1262),u=n(5162),c=n(4866);const d={sidebar_position:7},p="Demo",m={unversionedId:"docs/directConnection/demo",id:"docs/directConnection/demo",title:"Demo",description:"This is used to demonstrate the component's capabilities without making any external API calls.",source:"@site/docs/docs/directConnection/demo.mdx",sourceDirName:"docs/directConnection",slug:"/docs/directConnection/demo",permalink:"/docs/directConnection/demo",draft:!1,editUrl:"https://github.com/OvidijusParsiunas/deep-chat/tree/main/website/docs/docs/directConnection/demo.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docs",previous:{title:"AssemblyAI",permalink:"/docs/directConnection/AssemblyAI"},next:{title:"Styles",permalink:"/docs/styles"}},h={},b=[{value:"<code>demo</code>",id:"demo",level:3},{value:"Base Example",id:"base-example",level:4},{value:"Custom Response Example",id:"custom-response-example",level:4},{value:"Elements Example",id:"elements-example",level:4}],k={toc:b},f="wrapper";function y(e){let{components:t,...d}=e;return(0,o.kt)(f,(0,a.Z)({},k,d,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"demo"},"Demo"),(0,o.kt)("p",null,"This is used to demonstrate the component's capabilities without making any external API calls."),(0,o.kt)("h3",{id:"demo"},(0,o.kt)("inlineCode",{parentName:"h3"},"demo")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"true")," | { ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"response?:")," ",(0,o.kt)("a",{parentName:"li",href:"../connect#Result"},(0,o.kt)("inlineCode",{parentName:"a"},"Result"))," | (",(0,o.kt)("a",{parentName:"li",href:"../messages/#MessageContent"},(0,o.kt)("inlineCode",{parentName:"a"},"message: MessageContent")),") => ",(0,o.kt)("a",{parentName:"li",href:"../connect#Result"},(0,o.kt)("inlineCode",{parentName:"a"},"Result")),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"displayLoadingBubble?: boolean"),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"displayFileAttachmentContainer?: boolean"),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"displayErrors?: {"),(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"default?: boolean"),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"service?: boolean"),", ",(0,o.kt)("br",null),"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("inlineCode",{parentName:"li"},"speechToText?: boolean")," ",(0,o.kt)("br",null),"\n}}")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"response")," is used to override the default demo response with a custom one. It can either be a ",(0,o.kt)("a",{parentName:"p",href:"../connect#Result"},(0,o.kt)("inlineCode",{parentName:"a"},"Result"))," object or a function that returns\na ",(0,o.kt)("a",{parentName:"p",href:"../connect#Result"},(0,o.kt)("inlineCode",{parentName:"a"},"Result"))," object. ",(0,o.kt)("br",null),"\nThe following properties are used to toggle elements to showcase their design without making any user actions: ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"displayLoadingBubble")," is used to display the loading bubble. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"displayFileAttachmentContainer")," is used to display the element that encapsulates all of the files to be sent on the next message. ",(0,o.kt)("br",null),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"displayErrors")," is used to display error messages; for the component via ",(0,o.kt)("inlineCode",{parentName:"p"},"default"),", an API error via ",(0,o.kt)("inlineCode",{parentName:"p"},"service")," and a speech to text issue via ",(0,o.kt)("inlineCode",{parentName:"p"},"speechToText"),".\nThis is mainly used to showcase the override capabilities in ",(0,o.kt)("a",{parentName:"p",href:"../messages#errorMessages"},(0,o.kt)("inlineCode",{parentName:"a"},"errorMessages")),". ",(0,o.kt)("br",null)),(0,o.kt)(i.Z,{mdxType:"BrowserOnly"},(()=>n(1853).readdAutoNavShadowToggle())),(0,o.kt)("h4",{id:"base-example"},"Base Example"),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(s.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Let's play Rock, Paper, Scissors! Make your guess and see who wins!",directConnection:{demo:!0},mdxType:"DeepChatBrowser"})),(0,o.kt)(c.Z,{mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"<deep-chat directConnection='{\"demo\": true}'></deep-chat>\n"))),(0,o.kt)(u.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat directConnection=\'{"demo": true}\' containerStyle=\'{"borderRadius": "8px"}\'></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h4",{id:"custom-response-example"},"Custom Response Example"),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(s.Z,{containerStyle:{borderRadius:"8px"},introMessage:"Let's play Rock, Paper, Scissors! Make your guess and see who wins!",directConnection:{demo:{response:e=>{const t=e.text?.toLocaleLowerCase(),n=["rock","paper","scissors"][Math.floor(3*Math.random())];let a=`I guessed ${n}. `;return t===n?a+="It's a draw.":"rock"===t?a+="paper"===n?"I win!":"You win!":"paper"===t?a+="scissors"===n?"I win!":"You win!":"scissors"===t?a+="rock"===n?"I win!":"You win!":a="Guess either rock, paper or scissors",{result:{text:a}}}}},mdxType:"DeepChatBrowser"})),(0,o.kt)(c.Z,{mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"chatElementRef.directConnection = {\n  demo: {\n    response: (message) => {\n      const options = ['rock', 'paper', 'scissors'];\n      const userOption = message.text?.toLocaleLowerCase();\n      const aiOption = options[Math.floor(Math.random() * 3)];\n      let response = `I guessed ${aiOption}. `;\n      if (userOption === aiOption) response += 'Draw';\n      else if (userOption === 'rock') response += aiOption === 'paper' ? 'I win!' : 'You win!';\n      else if (userOption === 'paper') response += aiOption === 'scissors' ? 'I win!' : 'You win!';\n      else if (userOption === 'scissors') response += aiOption === 'rock' ? 'I win!' : 'You win!';\n      else response = 'Guess either rock, paper or scissors';\n      return {result: {text: response}};\n    },\n  },\n};\n"))),(0,o.kt)(u.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  id=\"chat-element\"\n  introMessage=\"Let's play Rock, Paper, Scissors! Make your guess and see who wins!\"\n  containerStyle='{\"borderRadius\": \"8px\"}'\n></deep-chat>\n\n<script>\n// ...other code\nconst chatElementRef = document.getElementById('chat-element');\nchatElementRef.directConnection = {\n  demo: {\n    response: (message) => {\n      const options = ['rock', 'paper', 'scissors'];\n      const userOption = message.text?.toLocaleLowerCase();\n      const aiOption = options[Math.floor(Math.random() * 3)];\n      let response = `I guessed ${aiOption}. `;\n      if (userOption === aiOption) response += 'Draw';\n      else if (userOption === 'rock') response += aiOption === 'paper' ? 'I win!' : 'You win!';\n      else if (userOption === 'paper') response += aiOption === 'scissors' ? 'I win!' : 'You win!';\n      else if (userOption === 'scissors') response += aiOption === 'rock' ? 'I win!' : 'You win!';\n      else response = 'Guess either rock, paper or scissors';\n      return {result: {text: response}};\n    },\n  },\n};\n")))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}),(0,o.kt)("h4",{id:"elements-example"},"Elements Example"),(0,o.kt)(r.Z,{mdxType:"ComponentContainer"},(0,o.kt)(s.Z,{containerStyle:{borderRadius:"8px"},directConnection:{demo:{displayLoadingBubble:!0,displayFileAttachmentContainer:!0,displayErrors:{service:!0}}},mdxType:"DeepChatBrowser"})),(0,o.kt)(c.Z,{mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"js",label:"Sample code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<deep-chat\n  directConnection=\'{\n    "demo": {\n      "displayLoadingBubble": true,\n      "displayFileAttachmentContainer": true,\n      "displayErrors": {"service": true}\n    }\n  }\'\n></deep-chat>\n'))),(0,o.kt)(u.Z,{value:"py",label:"Full code",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- This example is for Vanilla JS and should be tailored to your framework (see Examples) --\x3e\n\n<deep-chat\n  directConnection=\'{\n    "demo": {\n      "displayLoadingBubble": true,\n      "displayFileAttachmentContainer": true,\n      "displayErrors": {"service": true}\n    }\n  }\'\n  containerStyle=\'{"borderRadius": "8px"}\'\n></deep-chat>\n')))),(0,o.kt)(l.Z,{mdxType:"LineBreak"}))}y.isMDXComponent=!0}}]);