"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/docs/introduction","docId":"docs/introduction"},{"type":"link","label":"Installation","href":"/docs/installation","docId":"docs/installation"},{"type":"link","label":"Connect","href":"/docs/connect","docId":"docs/connect"},{"type":"category","label":"Direct Connection","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"OpenAI","href":"/docs/directConnection/OpenAI","docId":"docs/directConnection/OpenAI"},{"type":"link","label":"HuggingFace","href":"/docs/directConnection/HuggingFace","docId":"docs/directConnection/HuggingFace"},{"type":"link","label":"Cohere","href":"/docs/directConnection/Cohere","docId":"docs/directConnection/Cohere"},{"type":"link","label":"Azure","href":"/docs/directConnection/Azure","docId":"docs/directConnection/Azure"},{"type":"link","label":"AssemblyAI","href":"/docs/directConnection/AssemblyAI","docId":"docs/directConnection/AssemblyAI"},{"type":"link","label":"Demo","href":"/docs/directConnection/demo","docId":"docs/directConnection/demo"}],"href":"/docs/directConnection/"},{"type":"link","label":"Styles","href":"/docs/styles","docId":"docs/styles"},{"type":"link","label":"Messages","href":"/docs/messages","docId":"docs/messages"},{"type":"link","label":"Message Styles","href":"/docs/messageStyles","docId":"docs/messageStyles"},{"type":"link","label":"Files","href":"/docs/files","docId":"docs/files"},{"type":"link","label":"Intro Panel","href":"/docs/introPanel","docId":"docs/introPanel"},{"type":"link","label":"Methods","href":"/docs/methods","docId":"docs/methods"},{"type":"link","label":"Events","href":"/docs/events","docId":"docs/events"},{"type":"link","label":"Interceptors","href":"/docs/interceptors","docId":"docs/interceptors"}],"examples":[{"type":"link","label":"Design","href":"/examples/design","docId":"examples/design"},{"type":"link","label":"Frameworks","href":"/examples/frameworks","docId":"examples/frameworks"},{"type":"category","label":"Layout","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Full Screen","href":"/examples/Layout/fullScreen","docId":"examples/Layout/fullScreen"},{"type":"link","label":"Sticky","href":"/examples/Layout/sticky","docId":"examples/Layout/sticky"}]}]},"docs":{"docs/connect":{"id":"docs/connect","title":"Connect","description":"How to connect to an API","sidebar":"docs"},"docs/directConnection/AssemblyAI":{"id":"docs/directConnection/AssemblyAI","title":"AssemblyAI","description":"Properties used to connect to AssemblyAI.","sidebar":"docs"},"docs/directConnection/Azure":{"id":"docs/directConnection/Azure","title":"Azure","description":"Properties used to connect to Azure Cognitive Services.","sidebar":"docs"},"docs/directConnection/Cohere":{"id":"docs/directConnection/Cohere","title":"Cohere","description":"Properties used to connect to Cohere.","sidebar":"docs"},"docs/directConnection/demo":{"id":"docs/directConnection/demo","title":"Demo","description":"This is used to demonstrate the component\'s capabilities without making any external API calls.","sidebar":"docs"},"docs/directConnection/directConnection":{"id":"docs/directConnection/directConnection","title":"Direct Connection","description":"Deep Chat can be configured to bypass the use of an intermediary service and connect to a popular AI service API directly from the UI. The component\'s configuration","sidebar":"docs"},"docs/directConnection/HuggingFace":{"id":"docs/directConnection/HuggingFace","title":"HuggingFace","description":"Properties used to connect to Hugging Face API.","sidebar":"docs"},"docs/directConnection/OpenAI":{"id":"docs/directConnection/OpenAI","title":"OpenAI","description":"Properties used to connect to OpenAI.","sidebar":"docs"},"docs/events":{"id":"docs/events","title":"Events","description":"Events can be observed in two ways, either by assigning a function to a property or by listening to custom events fired from the component element.","sidebar":"docs"},"docs/files":{"id":"docs/files","title":"Files","description":"Properties used for sending files.","sidebar":"docs"},"docs/installation":{"id":"docs/installation","title":"Installation","description":"Install the component via npm:","sidebar":"docs"},"docs/interceptors":{"id":"docs/interceptors","title":"Interceptors","description":"Message transaction functionality can be intercepted to change its behaviour by assigning a function to a property.","sidebar":"docs"},"docs/introduction":{"id":"docs/introduction","title":"Introduction","description":"Deep Chat is a framework agnostic chat component built to bring AI services to life","sidebar":"docs"},"docs/introPanel":{"id":"docs/introPanel","title":"Intro Panel","description":"This is an overlay panel that is displayed in the center of the chat.","sidebar":"docs"},"docs/messages":{"id":"docs/messages","title":"Messages","description":"Properties related to messages.","sidebar":"docs"},"docs/messageStyles":{"id":"docs/messageStyles","title":"Message Styles","description":"Properties related to message styling.","sidebar":"docs"},"docs/methods":{"id":"docs/methods","title":"Methods","description":"Method properties that can be called directly on the Deep Chat element.","sidebar":"docs"},"docs/styles":{"id":"docs/styles","title":"Styles","description":"Properties related to messages.","sidebar":"docs"},"examples/design":{"id":"examples/design","title":"Design","description":"Examples to help you get started in styling your Deep Chat component.","sidebar":"examples"},"examples/frameworks":{"id":"examples/frameworks","title":"Frameworks","description":"React","sidebar":"examples"},"examples/Layout/fullScreen":{"id":"examples/Layout/fullScreen","title":"Full Screen","description":"Examples to help you expand the chat component dimensions. The trick is to simply set the containerStyle property to the dimensions you desire","sidebar":"examples"},"examples/Layout/sticky":{"id":"examples/Layout/sticky","title":"Sticky","description":"Example to help you stick the component to any side of the screen - furthering a chat-like experience to your users. The core method to achieve this is to","sidebar":"examples"}}}')}}]);